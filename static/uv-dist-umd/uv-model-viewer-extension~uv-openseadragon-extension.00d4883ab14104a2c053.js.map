{"version":3,"sources":["webpack://UV/./src/extensions/uv-openseadragon-extension/Events.ts","webpack://UV/./src/extensions/uv-openseadragon-extension/Mode.ts","webpack://UV/./src/modules/uv-contentleftpanel-module/ContentLeftPanel.ts","webpack://UV/./src/modules/uv-contentleftpanel-module/GalleryView.ts","webpack://UV/./src/modules/uv-contentleftpanel-module/ThumbsView.ts","webpack://UV/./src/modules/uv-contentleftpanel-module/TreeView.ts","webpack://UV/./src/modules/uv-dialogues-module/DownloadDialogue.ts","webpack://UV/./src/modules/uv-dialogues-module/MoreInfoDialogue.ts","webpack://UV/./src/modules/uv-shared-module/Bookmark.ts","webpack://UV/./src/modules/uv-shared-module/DownloadOption.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiB;;;;;;;;;;;;;AC7BlB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACe;;;;;;;;;;;;;ACXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,2BAA2B,mBAAO,CAAC,+FAAiC;AACpE;AACA,sBAAsB,mBAAO,CAAC,+FAAiC;AACzB;AACsB;AAChB;AACc;AACc;AAC9B;AACJ;AACmB;AACX;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uEAAU;AAC3C;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,uEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,oBAAoB,wDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yDAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAK;AAC3C,mCAAmC,mDAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6CAA6C,EAAE;AACvG;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wDAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAK;AACzB;AACA,oBAAoB,gFAAI;AACxB;AACA,eAAe,mDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,2DAAY;AACxE;AACA;AACA;AACA;AACA,8BAA8B,mDAAK;AACnC,gCAAgC,mDAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mDAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAAU;AACzC;AACA;AACA;AACA,+BAA+B,uEAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAAU;AACzqEAAS;AACiB;;;;;;;;;;;;;ACpmB5B;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC2D;AACJ;AACQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6EAAgB;AACpD;AACA,SAAS;AACT;AACA,mCAAmC,uEAAU;AAC7C,mCAAmC,uEAAU;AAC7C,SAAS;AACT;AACA,mCAAmC,uEAAU;AAC7C,SAAS;AACT;AACA,mCAAmC,uEAAU;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mEAAQ;AACa;;;;;;;;;;;;;ACvEvB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC6E;AACF;AACJ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oFAAM;AACvC;AACA,SAAS;AACT,iCAAiC,oFAAM;AACvC;AACA,SAAS;AACT,iCAAiC,oFAAM;AACvC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gFAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAc;AACM;;;;;;;;;;;;;ACvGtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC2D;AACJ;AACE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uEAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA,mCAAmC,uEAAU;AAC7C,SAAS;AACT;AACA,mCAAmC,uEAAU;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mEAAQ;AACU;;;;;;;;;;;;;ACpFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC2D;AACJ;AACY;AACd;AACX;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uEAAU;AACrC,4BAA4B,uEAAU;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uEAAU;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2CAA2C,+EAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,wDAAW;AAC1E;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA,4BAA4B,wDAAW;AACvC;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA,2BAA2B,mDAAK;AAChC,wBAAwB,qDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mEAAQ;AACkB;;;;;;;;;;;;;ACjN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC2D;AACJ;AACjB;AACD;AACuC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uEAAU;AACrC,4BAA4B,uEAAU;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+EAAiB;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAK;AACzC;AACA;AACA;AACA,uBAAuB,uEAAS;AAChC;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAQ;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mEAAQ;AACkB;;;;;;;;;;;;;ACnF5B;AAAA;AAAA;AACA;AACA;AACA;AACA,CAAC;AACmB;;;;;;;;;;;;;ACLpB;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC","file":"uv-model-viewer-extension~uv-openseadragon-extension.00d4883ab14104a2c053.js","sourcesContent":["var Events = /** @class */ (function () {\n    function Events() {\n    }\n    Events.namespace = \"openseadragonExtension.\";\n    Events.CURRENT_VIEW_URI = Events.namespace + \"currentViewUri\";\n    Events.IMAGE_SEARCH = Events.namespace + \"imageSearch\";\n    Events.MODE_CHANGED = Events.namespace + \"modeChanged\";\n    Events.NEXT_SEARCH_RESULT = Events.namespace + \"nextSearchResult\";\n    Events.NEXT_IMAGES_SEARCH_RESULT_UNAVAILABLE = Events.namespace + \"nextImagesSearchResultUnavailable\";\n    Events.PREV_IMAGES_SEARCH_RESULT_UNAVAILABLE = Events.namespace + \"prevImagesSearchResultUnavailable\";\n    Events.PAGE_SEARCH = Events.namespace + \"pageSearch\";\n    Events.PAGING_TOGGLED = Events.namespace + \"pagingToggled\";\n    Events.PREV_SEARCH_RESULT = Events.namespace + \"prevSearchResult\";\n    Events.PRINT = Events.namespace + \"print\";\n    Events.ROTATE = Events.namespace + \"rotate\";\n    Events.OPENSEADRAGON_ANIMATION_FINISH = Events.namespace + \"animationFinish\";\n    Events.OPENSEADRAGON_ANIMATION_START = Events.namespace + \"animationStart\";\n    Events.OPENSEADRAGON_ANIMATION = Events.namespace + \"animation\";\n    Events.OPENSEADRAGON_OPEN = Events.namespace + \"open\";\n    Events.OPENSEADRAGON_RESIZE = Events.namespace + \"resize\";\n    Events.OPENSEADRAGON_ROTATION = Events.namespace + \"rotationChanged\";\n    Events.SEARCH_PREVIEW_FINISH = Events.namespace + \"searchPreviewFinish\";\n    Events.SEARCH_PREVIEW_START = Events.namespace + \"searchPreviewStart\";\n    Events.SEARCH = Events.namespace + \"search\";\n    Events.XYWH_CHANGED = Events.namespace + \"xywhChanged\";\n    Events.ZOOM_IN = Events.namespace + \"zoomIn\";\n    Events.ZOOM_OUT = Events.namespace + \"zoomOut\";\n    return Events;\n}());\nexport { Events };\n","var Mode = /** @class */ (function () {\n    function Mode(value) {\n        this.value = value;\n    }\n    Mode.prototype.toString = function () {\n        return this.value;\n    };\n    Mode.image = new Mode(\"image\");\n    Mode.page = new Mode(\"page\");\n    return Mode;\n}());\nexport { Mode };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ViewingDirectionEnum = require(\"@iiif/vocabulary/dist-commonjs/\")\n    .ViewingDirection;\nvar ViewingHintEnum = require(\"@iiif/vocabulary/dist-commonjs/\").ViewingHint;\nimport { Bools } from \"@edsilv/utils\";\nimport { BaseEvents } from \"../uv-shared-module/BaseEvents\";\nimport { GalleryView } from \"./GalleryView\";\nimport { LeftPanel } from \"../uv-shared-module/LeftPanel\";\nimport { Mode } from \"../../extensions/uv-openseadragon-extension/Mode\";\nimport { ThumbsView } from \"./ThumbsView\";\nimport { TreeView } from \"./TreeView\";\nimport { LanguageMap, TreeNodeType } from \"manifesto.js\";\nimport { TreeSortType } from \"@iiif/manifold\";\nvar ContentLeftPanel = /** @class */ (function (_super) {\n    __extends(ContentLeftPanel, _super);\n    function ContentLeftPanel($element) {\n        var _this = _super.call(this, $element) || this;\n        _this.expandFullEnabled = false;\n        _this.isThumbsViewOpen = false;\n        _this.isTreeViewOpen = false;\n        _this.treeSortType = TreeSortType.NONE;\n        return _this;\n    }\n    ContentLeftPanel.prototype.create = function () {\n        var _this = this;\n        this.setConfig(\"contentLeftPanel\");\n        _super.prototype.create.call(this);\n        this.component.subscribe(BaseEvents.SETTINGS_CHANGED, function () {\n            _this.databind();\n        });\n        this.component.subscribe(BaseEvents.GALLERY_THUMB_SELECTED, function () {\n            _this.collapseFull();\n        });\n        this.component.subscribe(BaseEvents.METRIC_CHANGED, function () {\n            if (!_this.extension.isDesktopMetric()) {\n                if (_this.isFullyExpanded) {\n                    _this.collapseFull();\n                }\n            }\n        });\n        this.component.subscribe(BaseEvents.ANNOTATIONS, function () {\n            _this.databindThumbsView();\n            _this.databindGalleryView();\n        });\n        this.component.subscribe(BaseEvents.ANNOTATIONS_CLEARED, function () {\n            _this.databindThumbsView();\n            _this.databindGalleryView();\n        });\n        this.component.subscribe(BaseEvents.ANNOTATIONS_EMPTY, function () {\n            _this.databindThumbsView();\n            _this.databindGalleryView();\n        });\n        this.component.subscribe(BaseEvents.CANVAS_INDEX_CHANGED, function () {\n            if (_this.isFullyExpanded) {\n                _this.collapseFull();\n            }\n            _this.selectCurrentTreeNode();\n            _this.updateTreeTabBySelection();\n        });\n        this.component.subscribe(BaseEvents.RANGE_CHANGED, function () {\n            if (_this.isFullyExpanded) {\n                _this.collapseFull();\n            }\n            _this.selectCurrentTreeNode();\n            _this.updateTreeTabBySelection();\n        });\n        this.$tabs = $('<div class=\"tabs\"></div>');\n        this.$main.append(this.$tabs);\n        this.$treeButton = $('<a class=\"index tab\" tabindex=\"0\">' + this.content.index + \"</a>\");\n        this.$tabs.append(this.$treeButton);\n        this.$thumbsButton = $('<a class=\"thumbs tab\" tabindex=\"0\">' + this.content.thumbnails + \"</a>\");\n        this.$thumbsButton.prop(\"title\", this.content.thumbnails);\n        this.$tabs.append(this.$thumbsButton);\n        this.$tabsContent = $('<div class=\"tabsContent\"></div>');\n        this.$main.append(this.$tabsContent);\n        this.$options = $('<div class=\"options\"></div>');\n        this.$tabsContent.append(this.$options);\n        this.$topOptions = $('<div class=\"top\"></div>');\n        this.$options.append(this.$topOptions);\n        this.$treeSelect = $('<select aria-label=\"' + this.content.manifestRanges + '\"></select>');\n        this.$topOptions.append(this.$treeSelect);\n        this.$bottomOptions = $('<div class=\"bottom\"></div>');\n        this.$options.append(this.$bottomOptions);\n        this.$leftOptions = $('<div class=\"left\"></div>');\n        this.$bottomOptions.append(this.$leftOptions);\n        this.$rightOptions = $('<div class=\"right\"></div>');\n        this.$bottomOptions.append(this.$rightOptions);\n        this.$treeViewOptions = $('<div class=\"treeView\"></div>');\n        this.$leftOptions.append(this.$treeViewOptions);\n        this.$sortByLabel = $('<span class=\"sort\">' + this.content.sortBy + \"</span>\");\n        this.$treeViewOptions.append(this.$sortByLabel);\n        this.$sortButtonGroup = $('<div class=\"btn-group\"></div>');\n        this.$treeViewOptions.append(this.$sortButtonGroup);\n        this.$sortByDateButton = $('<button class=\"btn\" tabindex=\"0\">' + this.content.date + \"</button>\");\n        this.$sortButtonGroup.append(this.$sortByDateButton);\n        this.$sortByVolumeButton = $('<button class=\"btn\" tabindex=\"0\">' + this.content.volume + \"</button>\");\n        this.$sortButtonGroup.append(this.$sortByVolumeButton);\n        this.$views = $('<div class=\"views\"></div>');\n        this.$tabsContent.append(this.$views);\n        this.$treeView = $('<div class=\"treeView\"></div>');\n        this.$views.append(this.$treeView);\n        this.$thumbsView = $('<div class=\"thumbsView\" tabindex=\"0\"></div>');\n        this.$views.append(this.$thumbsView);\n        this.$galleryView = $('<div class=\"galleryView\"></div>');\n        this.$views.append(this.$galleryView);\n        this.$treeSelect.hide();\n        this.$treeSelect.change(function () {\n            _this.databindTreeView();\n            _this.selectCurrentTreeNode();\n            _this.updateTreeTabBySelection();\n        });\n        this.$sortByDateButton.on(\"click\", function () {\n            _this.sortByDate();\n        });\n        this.$sortByVolumeButton.on(\"click\", function () {\n            _this.sortByVolume();\n        });\n        this.$treeViewOptions.hide();\n        this.$treeButton.onPressed(function () {\n            _this.openTreeView();\n        });\n        this.$thumbsButton.onPressed(function () {\n            _this.openThumbsView();\n        });\n        this.setTitle(this.content.title);\n        this.$sortByVolumeButton.addClass(\"on\");\n        var tabOrderConfig = this.options.tabOrder;\n        if (tabOrderConfig) {\n            // sort tabs\n            tabOrderConfig = tabOrderConfig.toLowerCase();\n            tabOrderConfig = tabOrderConfig.replace(/ /g, \"\");\n            var tabOrder = tabOrderConfig.split(\",\");\n            if (tabOrder[0] === \"thumbs\") {\n                this.$treeButton.before(this.$thumbsButton);\n                this.$thumbsButton.addClass(\"first\");\n            }\n            else {\n                this.$treeButton.addClass(\"first\");\n            }\n        }\n    };\n    ContentLeftPanel.prototype.createTreeView = function () {\n        this.treeView = new TreeView(this.$treeView);\n        this.treeView.treeData = this.getTreeData();\n        this.treeView.setup();\n        this.databindTreeView();\n        // populate the tree select drop down when there are multiple top-level ranges\n        var topRanges = this.extension.helper.getTopRanges();\n        if (topRanges.length > 1) {\n            for (var i = 0; i < topRanges.length; i++) {\n                var range = topRanges[i];\n                this.$treeSelect.append('<option value=\"' +\n                    range.id +\n                    '\">' +\n                    LanguageMap.getValue(range.getLabel()) +\n                    \"</option>\");\n            }\n        }\n        this.updateTreeViewOptions();\n    };\n    ContentLeftPanel.prototype.databind = function () {\n        this.databindThumbsView();\n        this.databindTreeView();\n        this.databindGalleryView();\n    };\n    ContentLeftPanel.prototype.updateTreeViewOptions = function () {\n        var treeData = this.getTree();\n        if (!treeData) {\n            return;\n        }\n        if (this.isCollection() &&\n            this.extension.helper.treeHasNavDates(treeData)) {\n            this.$treeViewOptions.show();\n        }\n        else {\n            this.$treeViewOptions.hide();\n        }\n        if (this.$treeSelect.find(\"option\").length) {\n            this.$treeSelect.show();\n        }\n        else {\n            this.$treeSelect.hide();\n        }\n    };\n    ContentLeftPanel.prototype.sortByDate = function () {\n        this.treeSortType = TreeSortType.DATE;\n        this.treeView.treeData = this.getTreeData();\n        this.treeView.databind();\n        this.selectCurrentTreeNode();\n        this.$sortByDateButton.addClass(\"on\");\n        this.$sortByVolumeButton.removeClass(\"on\");\n        this.resize();\n    };\n    ContentLeftPanel.prototype.sortByVolume = function () {\n        this.treeSortType = TreeSortType.NONE;\n        this.treeView.treeData = this.getTreeData();\n        this.treeView.databind();\n        this.selectCurrentTreeNode();\n        this.$sortByDateButton.removeClass(\"on\");\n        this.$sortByVolumeButton.addClass(\"on\");\n        this.resize();\n    };\n    ContentLeftPanel.prototype.isCollection = function () {\n        var treeData = this.getTree();\n        if (treeData) {\n            return treeData.data.type === TreeNodeType.COLLECTION;\n        }\n        throw new Error(\"Tree not available\");\n    };\n    ContentLeftPanel.prototype.databindTreeView = function () {\n        if (!this.treeView)\n            return;\n        this.treeView.treeData = this.getTreeData();\n        this.treeView.databind();\n        this.selectCurrentTreeNode();\n    };\n    ContentLeftPanel.prototype.getTreeData = function () {\n        return {\n            autoExpand: this._isTreeAutoExpanded(),\n            branchNodesExpandOnClick: Bools.getBool(this.config.options.branchNodesExpandOnClick, true),\n            branchNodesSelectable: Bools.getBool(this.config.options.branchNodesSelectable, false),\n            helper: this.extension.helper,\n            topRangeIndex: this.getSelectedTopRangeIndex(),\n            treeSortType: this.treeSortType\n        };\n    };\n    ContentLeftPanel.prototype._isTreeAutoExpanded = function () {\n        var autoExpandTreeEnabled = Bools.getBool(this.config.options.autoExpandTreeEnabled, false);\n        var autoExpandTreeIfFewerThan = this.config.options.autoExpandTreeIfFewerThan || 0;\n        if (autoExpandTreeEnabled) {\n            // get total number of tree nodes\n            var flatTree = this.extension.helper.getFlattenedTree();\n            if (flatTree && flatTree.length < autoExpandTreeIfFewerThan) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ContentLeftPanel.prototype.updateTreeTabByCanvasIndex = function () {\n        // update tab to current top range label (if there is one)\n        var topRanges = this.extension.helper.getTopRanges();\n        if (topRanges.length > 1) {\n            var index = this.getCurrentCanvasTopRangeIndex();\n            if (index === -1) {\n                return;\n            }\n            var currentRange = topRanges[index];\n            this.setTreeTabTitle(LanguageMap.getValue(currentRange.getLabel()));\n        }\n        else {\n            this.setTreeTabTitle(this.content.index);\n        }\n    };\n    ContentLeftPanel.prototype.setTreeTabTitle = function (title) {\n        this.$treeButton.text(title);\n        this.$treeButton.prop(\"title\", title);\n    };\n    ContentLeftPanel.prototype.updateTreeTabBySelection = function () {\n        var title = null;\n        var topRanges = this.extension.helper.getTopRanges();\n        if (topRanges.length > 1) {\n            if (this.treeView) {\n                title = this.getSelectedTree().text();\n            }\n            else {\n                title = LanguageMap.getValue(topRanges[0].getLabel());\n            }\n        }\n        if (title) {\n            this.setTreeTabTitle(title);\n        }\n        else {\n            this.setTreeTabTitle(this.content.index);\n        }\n    };\n    ContentLeftPanel.prototype.getViewingHint = function () {\n        return this.extension.helper.getViewingHint();\n    };\n    ContentLeftPanel.prototype.getViewingDirection = function () {\n        return this.extension.helper.getViewingDirection();\n    };\n    ContentLeftPanel.prototype.createThumbsView = function () {\n        this.thumbsView = new ThumbsView(this.$thumbsView);\n        this.databindThumbsView();\n    };\n    ContentLeftPanel.prototype.databindThumbsView = function () {\n        if (!this.thumbsView)\n            return;\n        var width;\n        var height;\n        var viewingHint = this.getViewingHint();\n        var viewingDirection = this.getViewingDirection();\n        if (viewingDirection &&\n            (viewingDirection === ViewingDirectionEnum.LEFT_TO_RIGHT ||\n                viewingDirection === ViewingDirectionEnum.RIGHT_TO_LEFT)) {\n            width = this.config.options.twoColThumbWidth;\n            height = this.config.options.twoColThumbHeight;\n        }\n        else if (viewingHint && viewingHint === ViewingHintEnum.PAGED) {\n            width = this.config.options.twoColThumbWidth;\n            height = this.config.options.twoColThumbHeight;\n        }\n        else {\n            width = this.config.options.oneColThumbWidth;\n            height = this.config.options.oneColThumbHeight;\n        }\n        var thumbs = (this.extension.helper.getThumbs(width, height));\n        if (viewingDirection &&\n            viewingDirection === ViewingDirectionEnum.BOTTOM_TO_TOP) {\n            thumbs.reverse();\n        }\n        // add a search result icon for pages with results\n        var searchResults = (this.extension).annotations;\n        if (searchResults && searchResults.length) {\n            var _loop_1 = function (i) {\n                var searchResult = searchResults[i];\n                // find the thumb with the same canvasIndex and add the searchResult\n                var thumb = thumbs.filter(function (t) { return t.index === searchResult.canvasIndex; })[0];\n                if (thumb) {\n                    // clone the data so searchResults isn't persisted on the canvas.\n                    var data = $.extend(true, {}, thumb.data);\n                    data.searchResults = searchResult.rects.length;\n                    thumb.data = data;\n                }\n            };\n            for (var i = 0; i < searchResults.length; i++) {\n                _loop_1(i);\n            }\n        }\n        this.thumbsView.thumbs = thumbs;\n        this.thumbsView.databind();\n    };\n    ContentLeftPanel.prototype.createGalleryView = function () {\n        this.galleryView = new GalleryView(this.$galleryView);\n        this.galleryView.galleryData = this.getGalleryData();\n        this.galleryView.setup();\n        this.databindGalleryView();\n    };\n    ContentLeftPanel.prototype.databindGalleryView = function () {\n        if (!this.galleryView)\n            return;\n        this.galleryView.galleryData = this.getGalleryData();\n        this.galleryView.databind();\n    };\n    ContentLeftPanel.prototype.getGalleryData = function () {\n        return {\n            helper: this.extension.helper,\n            chunkedResizingThreshold: this.config.options\n                .galleryThumbChunkedResizingThreshold,\n            content: this.config.content,\n            debug: false,\n            imageFadeInDuration: 300,\n            initialZoom: 6,\n            minLabelWidth: 20,\n            pageModeEnabled: this.isPageModeEnabled(),\n            scrollStopDuration: 100,\n            searchResults: this.extension.annotations,\n            sizingEnabled: true,\n            thumbHeight: this.config.options.galleryThumbHeight,\n            thumbLoadPadding: this.config.options.galleryThumbLoadPadding,\n            thumbWidth: this.config.options.galleryThumbWidth,\n            viewingDirection: this.getViewingDirection()\n        };\n    };\n    ContentLeftPanel.prototype.isPageModeEnabled = function () {\n        // todo: checks if the panel is being used in the openseadragon extension.\n        // pass a `isPageModeEnabled` function to the panel's constructor instead?\n        if (typeof this.extension.getMode === \"function\") {\n            return (Bools.getBool(this.config.options.pageModeEnabled, true) &&\n                this.extension.getMode().toString() ===\n                    Mode.page.toString());\n        }\n        return Bools.getBool(this.config.options.pageModeEnabled, true);\n    };\n    ContentLeftPanel.prototype.getSelectedTree = function () {\n        return this.$treeSelect.find(\":selected\");\n    };\n    ContentLeftPanel.prototype.getSelectedTopRangeIndex = function () {\n        var topRangeIndex = this.getSelectedTree().index();\n        if (topRangeIndex === -1) {\n            topRangeIndex = 0;\n        }\n        return topRangeIndex;\n    };\n    ContentLeftPanel.prototype.getTree = function () {\n        var topRangeIndex = this.getSelectedTopRangeIndex();\n        return this.extension.helper.getTree(topRangeIndex, TreeSortType.NONE);\n    };\n    ContentLeftPanel.prototype.toggleFinish = function () {\n        _super.prototype.toggleFinish.call(this);\n        if (this.isUnopened) {\n            var treeEnabled = Bools.getBool(this.config.options.treeEnabled, true);\n            var thumbsEnabled = Bools.getBool(this.config.options.thumbsEnabled, true);\n            var treeData = this.getTree();\n            if (!treeData || !treeData.nodes.length) {\n                treeEnabled = false;\n            }\n            // hide the tabs if either tree or thumbs are disabled\n            if (!treeEnabled || !thumbsEnabled)\n                this.$tabs.hide();\n            if (thumbsEnabled && this.defaultToThumbsView()) {\n                this.openThumbsView();\n            }\n            else if (treeEnabled) {\n                this.openTreeView();\n            }\n        }\n    };\n    ContentLeftPanel.prototype.defaultToThumbsView = function () {\n        var defaultToTreeEnabled = Bools.getBool(this.config.options.defaultToTreeEnabled, false);\n        var defaultToTreeIfGreaterThan = this.config.options.defaultToTreeIfGreaterThan || 0;\n        var treeData = this.getTree();\n        if (defaultToTreeEnabled) {\n            if (treeData && treeData.nodes.length > defaultToTreeIfGreaterThan) {\n                return false;\n            }\n        }\n        return true;\n    };\n    ContentLeftPanel.prototype.expandFullStart = function () {\n        _super.prototype.expandFullStart.call(this);\n        this.component.publish(BaseEvents.LEFTPANEL_EXPAND_FULL_START);\n    };\n    ContentLeftPanel.prototype.expandFullFinish = function () {\n        _super.prototype.expandFullFinish.call(this);\n        if (this.$treeButton.hasClass(\"on\")) {\n            this.openTreeView();\n        }\n        else if (this.$thumbsButton.hasClass(\"on\")) {\n            this.openThumbsView();\n        }\n        this.component.publish(BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH);\n    };\n    ContentLeftPanel.prototype.collapseFullStart = function () {\n        _super.prototype.collapseFullStart.call(this);\n        this.component.publish(BaseEvents.LEFTPANEL_COLLAPSE_FULL_START);\n    };\n    ContentLeftPanel.prototype.collapseFullFinish = function () {\n        _super.prototype.collapseFullFinish.call(this);\n        // todo: write a more generic tabs system with base tab class.\n        // thumbsView may not necessarily have been created yet.\n        // replace thumbsView with galleryView.\n        if (this.$thumbsButton.hasClass(\"on\")) {\n            this.openThumbsView();\n        }\n        this.component.publish(BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH);\n    };\n    ContentLeftPanel.prototype.openTreeView = function () {\n        this.isTreeViewOpen = true;\n        this.isThumbsViewOpen = false;\n        if (!this.treeView) {\n            this.createTreeView();\n        }\n        this.$treeButton.addClass(\"on\");\n        this.$thumbsButton.removeClass(\"on\");\n        this.treeView.show();\n        if (this.thumbsView)\n            this.thumbsView.hide();\n        if (this.galleryView)\n            this.galleryView.hide();\n        this.updateTreeViewOptions();\n        this.selectCurrentTreeNode();\n        this.resize();\n        this.treeView.resize();\n        this.component.publish(BaseEvents.OPEN_TREE_VIEW);\n    };\n    ContentLeftPanel.prototype.openThumbsView = function () {\n        this.isTreeViewOpen = false;\n        this.isThumbsViewOpen = true;\n        if (!this.thumbsView) {\n            this.createThumbsView();\n        }\n        if (this.isFullyExpanded && !this.galleryView) {\n            this.createGalleryView();\n        }\n        this.$treeButton.removeClass(\"on\");\n        this.$thumbsButton.addClass(\"on\");\n        if (this.treeView)\n            this.treeView.hide();\n        this.$treeSelect.hide();\n        this.$treeViewOptions.hide();\n        this.resize();\n        if (this.isFullyExpanded) {\n            this.thumbsView.hide();\n            if (this.galleryView)\n                this.galleryView.show();\n            if (this.galleryView)\n                this.galleryView.resize();\n        }\n        else {\n            if (this.galleryView)\n                this.galleryView.hide();\n            this.thumbsView.show();\n            this.thumbsView.resize();\n        }\n        this.component.publish(BaseEvents.OPEN_THUMBS_VIEW);\n    };\n    ContentLeftPanel.prototype.selectTopRangeIndex = function (index) {\n        this.$treeSelect.prop(\"selectedIndex\", index);\n    };\n    ContentLeftPanel.prototype.getCurrentCanvasTopRangeIndex = function () {\n        var topRangeIndex = -1;\n        var range = this.extension.getCurrentCanvasRange();\n        if (range) {\n            topRangeIndex = Number(range.path.split(\"/\")[0]);\n        }\n        return topRangeIndex;\n    };\n    ContentLeftPanel.prototype.selectCurrentTreeNode = function () {\n        // todo: merge selectCurrentTreeNodeByCanvas and selectCurrentTreeNodeByRange\n        // the openseadragon extension should keep track of the current range instead of using canvas index\n        if (this.extension.name === \"uv-openseadragon-extension\") {\n            this.selectCurrentTreeNodeByCanvas();\n        }\n        else {\n            this.selectCurrentTreeNodeByRange();\n        }\n    };\n    ContentLeftPanel.prototype.selectCurrentTreeNodeByRange = function () {\n        if (this.treeView) {\n            var range = this.extension.helper.getCurrentRange();\n            var node = null;\n            if (range && range.treeNode) {\n                node = this.treeView.getNodeById(range.treeNode.id);\n            }\n            if (node) {\n                this.treeView.selectNode(node);\n            }\n            else {\n                this.selectTreeNodeByManifest();\n            }\n        }\n    };\n    ContentLeftPanel.prototype.selectCurrentTreeNodeByCanvas = function () {\n        if (this.treeView) {\n            var node = null;\n            var currentCanvasTopRangeIndex = this.getCurrentCanvasTopRangeIndex();\n            var selectedTopRangeIndex = this.getSelectedTopRangeIndex();\n            var usingCorrectTree = currentCanvasTopRangeIndex === selectedTopRangeIndex;\n            var range = null;\n            if (currentCanvasTopRangeIndex !== -1) {\n                range = this.extension.getCurrentCanvasRange();\n                //range = this.extension.helper.getCurrentRange();\n                if (range && range.treeNode) {\n                    node = this.treeView.getNodeById(range.treeNode.id);\n                }\n            }\n            // use manifest root node\n            // if (!node){\n            //     id = this.extension.helper.manifest.defaultTree.id;\n            //     node = this.treeView.getNodeById(id);\n            // }\n            if (node && usingCorrectTree) {\n                this.treeView.selectNode(node);\n            }\n            else {\n                range = this.extension.helper.getCurrentRange();\n                if (range && range.treeNode) {\n                    node = this.treeView.getNodeById(range.treeNode.id);\n                }\n                if (node) {\n                    this.treeView.selectNode(node);\n                }\n                else {\n                    this.selectTreeNodeByManifest();\n                }\n            }\n        }\n    };\n    // fall through to this is there's no current range or canvas\n    ContentLeftPanel.prototype.selectTreeNodeByManifest = function () {\n        var _this = this;\n        var collectionIndex = this.extension.helper.collectionIndex;\n        var manifestIndex = this.extension.helper.manifestIndex;\n        var allNodes = this.treeView.getAllNodes();\n        var nodeFound = false;\n        allNodes.map(function (node) {\n            if (node.isCollection() && node.data.index === collectionIndex) {\n                _this.treeView.selectNode(node);\n                _this.treeView.expandNode(node, true);\n                nodeFound = true;\n            }\n            if (node.isManifest() && node.data.index === manifestIndex) {\n                _this.treeView.selectNode(node);\n                nodeFound = true;\n            }\n        });\n        if (!nodeFound) {\n            this.treeView.deselectCurrentNode();\n        }\n    };\n    ContentLeftPanel.prototype.resize = function () {\n        _super.prototype.resize.call(this);\n        this.$tabsContent.height(this.$main.height() -\n            (this.$tabs.is(\":visible\") ? this.$tabs.height() : 0) -\n            this.$tabsContent.verticalPadding());\n        this.$views.height(this.$tabsContent.height() - this.$options.outerHeight());\n    };\n    return ContentLeftPanel;\n}(LeftPanel));\nexport { ContentLeftPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseEvents } from \"../uv-shared-module/BaseEvents\";\nimport { BaseView } from \"../uv-shared-module/BaseView\";\nimport { GalleryComponent } from \"@iiif/iiif-gallery-component\";\nvar GalleryView = /** @class */ (function (_super) {\n    __extends(GalleryView, _super);\n    function GalleryView($element) {\n        var _this = _super.call(this, $element, true, true) || this;\n        _this.isOpen = false;\n        return _this;\n    }\n    GalleryView.prototype.create = function () {\n        this.setConfig(\"contentLeftPanel\");\n        _super.prototype.create.call(this);\n        this.$gallery = $('<div class=\"iiif-gallery-component\"></div>');\n        this.$element.append(this.$gallery);\n    };\n    GalleryView.prototype.setup = function () {\n        var that = this;\n        this.galleryComponent = new GalleryComponent({\n            target: this.$gallery[0]\n        });\n        this.galleryComponent.on(\"thumbSelected\", function (thumb) {\n            that.component.publish(BaseEvents.GALLERY_THUMB_SELECTED, thumb);\n            that.component.publish(BaseEvents.THUMB_SELECTED, thumb);\n        }, false);\n        this.galleryComponent.on(\"decreaseSize\", function () {\n            that.component.publish(BaseEvents.GALLERY_DECREASE_SIZE);\n        }, false);\n        this.galleryComponent.on(\"increaseSize\", function () {\n            that.component.publish(BaseEvents.GALLERY_INCREASE_SIZE);\n        }, false);\n    };\n    GalleryView.prototype.databind = function () {\n        this.galleryComponent.options.data = this.galleryData;\n        this.galleryComponent.set(this.galleryData);\n        this.resize();\n    };\n    GalleryView.prototype.show = function () {\n        var _this = this;\n        this.isOpen = true;\n        this.$element.show();\n        // todo: would be better to have no imperative methods on components and use a reactive pattern\n        setTimeout(function () {\n            _this.galleryComponent.selectIndex(_this.extension.helper.canvasIndex);\n        }, 10);\n    };\n    GalleryView.prototype.hide = function () {\n        this.isOpen = false;\n        this.$element.hide();\n    };\n    GalleryView.prototype.resize = function () {\n        _super.prototype.resize.call(this);\n        var $main = this.$gallery.find(\".main\");\n        var $header = this.$gallery.find(\".header\");\n        $main.height(this.$element.height() - $header.height());\n    };\n    return GalleryView;\n}(BaseView));\nexport { GalleryView };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ThumbsView as BaseThumbsView } from \"../uv-shared-module/ThumbsView\";\nimport { Events } from \"../../extensions/uv-openseadragon-extension/Events\";\nimport { Mode } from \"../../extensions/uv-openseadragon-extension/Mode\";\nvar ThumbsView = /** @class */ (function (_super) {\n    __extends(ThumbsView, _super);\n    function ThumbsView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ThumbsView.prototype.create = function () {\n        var _this = this;\n        this.setConfig(\"contentLeftPanel\");\n        _super.prototype.create.call(this);\n        // todo: this should be a setting\n        this.component.subscribe(Events.MODE_CHANGED, function () {\n            _this.setLabel();\n        });\n        this.component.subscribe(Events.SEARCH_PREVIEW_START, function (canvasIndex) {\n            _this.searchPreviewStart(canvasIndex);\n        });\n        this.component.subscribe(Events.SEARCH_PREVIEW_FINISH, function () {\n            _this.searchPreviewFinish();\n        });\n        if (this.extension.helper.isPaged()) {\n            this.$thumbs.addClass(\"paged\");\n        }\n        var that = this;\n        $.views.helpers({\n            separator: function () {\n                // two thumbs per line\n                if (that.extension.helper.isPaged()) {\n                    return (this.data.index - 1) % 2 == 0 ? false : true;\n                }\n                return true; // default to one thumbnail per row\n            }\n        });\n    };\n    ThumbsView.prototype.addSelectedClassToThumbs = function (index) {\n        var indices = this.extension.getPagedIndices(index);\n        for (var i = 0; i < indices.length; i++) {\n            this.getThumbByIndex(indices[i]).addClass(\"selected\");\n        }\n    };\n    ThumbsView.prototype.isPageModeEnabled = function () {\n        // todo: move getMode to BaseExtension. call it getIndexingMode which can be Label or Index\n        if (typeof this.extension.getMode === \"function\") {\n            return (this.config.options.pageModeEnabled &&\n                this.extension.getMode().toString() ===\n                    Mode.page.toString());\n        }\n        return this.config.options.pageModeEnabled;\n    };\n    ThumbsView.prototype.searchPreviewStart = function (canvasIndex) {\n        this.scrollToThumb(canvasIndex);\n        var $thumb = this.getThumbByIndex(canvasIndex);\n        $thumb.addClass(\"searchpreview\");\n    };\n    ThumbsView.prototype.searchPreviewFinish = function () {\n        this.scrollToThumb(this.extension.helper.canvasIndex);\n        this.getAllThumbs().removeClass(\"searchpreview\");\n    };\n    ThumbsView.prototype.setLabel = function () {\n        if (this.isPDF()) {\n            $(this.$thumbs)\n                .find(\"span.index\")\n                .hide();\n            $(this.$thumbs)\n                .find(\"span.label\")\n                .hide();\n        }\n        else {\n            if (this.isPageModeEnabled()) {\n                $(this.$thumbs)\n                    .find(\"span.index\")\n                    .hide();\n                $(this.$thumbs)\n                    .find(\"span.label\")\n                    .show();\n            }\n            else {\n                $(this.$thumbs)\n                    .find(\"span.index\")\n                    .show();\n                $(this.$thumbs)\n                    .find(\"span.label\")\n                    .hide();\n            }\n        }\n    };\n    return ThumbsView;\n}(BaseThumbsView));\nexport { ThumbsView };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseEvents } from \"../uv-shared-module/BaseEvents\";\nimport { BaseView } from \"../uv-shared-module/BaseView\";\nimport { TreeComponent } from \"@iiif/iiif-tree-component\";\nvar TreeView = /** @class */ (function (_super) {\n    __extends(TreeView, _super);\n    function TreeView($element) {\n        var _this = _super.call(this, $element, true, true) || this;\n        _this.isOpen = false;\n        return _this;\n    }\n    TreeView.prototype.create = function () {\n        this.setConfig(\"contentLeftPanel\");\n        _super.prototype.create.call(this);\n        this.$tree = $('<div class=\"iiif-tree-component\"></div>');\n        this.$element.append(this.$tree);\n    };\n    TreeView.prototype.setup = function () {\n        var that = this;\n        this.treeComponent = new TreeComponent({\n            target: this.$tree[0],\n            data: this.treeData\n        });\n        this.treeComponent.on(\"treeNodeSelected\", function (node) {\n            that.component.publish(BaseEvents.TREE_NODE_SELECTED, node);\n        }, false);\n        this.treeComponent.on(\"treeNodeMultiSelected\", function (node) {\n            that.component.publish(BaseEvents.TREE_NODE_MULTISELECTED, node);\n        }, false);\n    };\n    TreeView.prototype.databind = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.treeComponent.set(_this.treeData);\n            _this.resize();\n        }, 1);\n    };\n    TreeView.prototype.show = function () {\n        this.isOpen = true;\n        this.$element.show();\n    };\n    TreeView.prototype.hide = function () {\n        this.isOpen = false;\n        this.$element.hide();\n    };\n    TreeView.prototype.selectNode = function (node) {\n        if (!this.treeComponent.selectedNode) {\n            this.treeComponent.expandParents(node, true);\n            var link = this.$tree.find(\"#tree-link-\" + node.id)[0];\n            if (link) {\n                link.scrollIntoViewIfNeeded();\n            }\n        }\n        this.treeComponent.selectNode(node);\n    };\n    TreeView.prototype.expandNode = function (node, expanded) {\n        this.treeComponent.expandNode(node, expanded);\n    };\n    TreeView.prototype.getAllNodes = function () {\n        return this.treeComponent.getAllNodes();\n    };\n    TreeView.prototype.deselectCurrentNode = function () {\n        this.treeComponent.deselectCurrentNode();\n    };\n    TreeView.prototype.getNodeById = function (id) {\n        return this.treeComponent.getNodeById(id);\n    };\n    TreeView.prototype.resize = function () {\n        _super.prototype.resize.call(this);\n    };\n    return TreeView;\n}(BaseView));\nexport { TreeView };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseEvents } from \"../uv-shared-module/BaseEvents\";\nimport { Dialogue } from \"../uv-shared-module/Dialogue\";\nimport { DownloadOption } from \"../uv-shared-module/DownloadOption\";\nimport { Bools, Files, Strings } from \"@edsilv/utils\";\nimport { LanguageMap } from \"manifesto.js\";\nvar DownloadDialogue = /** @class */ (function (_super) {\n    __extends(DownloadDialogue, _super);\n    function DownloadDialogue($element) {\n        return _super.call(this, $element) || this;\n    }\n    DownloadDialogue.prototype.create = function () {\n        var _this = this;\n        this.setConfig(\"downloadDialogue\");\n        _super.prototype.create.call(this);\n        this.openCommand = BaseEvents.SHOW_DOWNLOAD_DIALOGUE;\n        this.closeCommand = BaseEvents.HIDE_DOWNLOAD_DIALOGUE;\n        this.component.subscribe(this.openCommand, function (triggerButton) {\n            _this.open(triggerButton);\n        });\n        this.component.subscribe(this.closeCommand, function () {\n            _this.close();\n        });\n        // create ui.\n        this.$title = $(\"<h1>\" + this.content.title + \"</h1>\");\n        this.$content.append(this.$title);\n        this.$noneAvailable = $('<div class=\"noneAvailable\">' + this.content.noneAvailable + \"</div>\");\n        this.$content.append(this.$noneAvailable);\n        this.$downloadOptions = $('<ol class=\"options\"></ol>');\n        this.$content.append(this.$downloadOptions);\n        this.$footer = $('<div class=\"footer\"></div>');\n        this.$content.append(this.$footer);\n        this.$termsOfUseButton = $('<a href=\"#\">' + this.extension.data.config.content.termsOfUse + \"</a>\");\n        this.$footer.append(this.$termsOfUseButton);\n        this.$termsOfUseButton.onPressed(function () {\n            _this.component.publish(BaseEvents.SHOW_TERMS_OF_USE);\n        });\n        // hide\n        this.$element.hide();\n        this.updateTermsOfUseButton();\n    };\n    DownloadDialogue.prototype.addEntireFileDownloadOptions = function () {\n        if (this.isDownloadOptionAvailable(DownloadOption.ENTIRE_FILE_AS_ORIGINAL)) {\n            this.$downloadOptions.empty();\n            //\n            // add each file src\n            var canvas = this.extension.helper.getCurrentCanvas();\n            var renderingFound = false;\n            var renderings = canvas.getRenderings();\n            for (var i = 0; i < renderings.length; i++) {\n                var rendering = renderings[i];\n                var renderingFormat = rendering.getFormat();\n                var format = \"\";\n                if (renderingFormat) {\n                    format = renderingFormat.toString();\n                }\n                this.addEntireFileDownloadOption(rendering.id, LanguageMap.getValue(rendering.getLabel()), format);\n                renderingFound = true;\n            }\n            if (!renderingFound) {\n                var annotationFound = false;\n                var annotations = canvas.getContent();\n                for (var i = 0; i < annotations.length; i++) {\n                    var annotation = annotations[i];\n                    var body = annotation.getBody();\n                    if (body.length) {\n                        var format = body[0].getFormat();\n                        if (format) {\n                            this.addEntireFileDownloadOption(body[0].id, \"\", format.toString());\n                            annotationFound = true;\n                        }\n                    }\n                }\n                if (!annotationFound) {\n                    this.addEntireFileDownloadOption(canvas.id, \"\", \"\");\n                }\n            }\n        }\n    };\n    DownloadDialogue.prototype.addEntireFileDownloadOption = function (uri, label, format) {\n        var fileType;\n        if (format) {\n            fileType = Files.simplifyMimeType(format);\n        }\n        else {\n            fileType = this.getFileExtension(uri);\n        }\n        if (!label) {\n            label = this.content.entireFileAsOriginal;\n        }\n        if (fileType) {\n            label += \" (\" + fileType + \")\";\n        }\n        this.$downloadOptions.append('<li><a href=\"' +\n            uri +\n            '\" target=\"_blank\" download tabindex=\"0\">' +\n            label +\n            \"</li>\");\n    };\n    DownloadDialogue.prototype.resetDynamicDownloadOptions = function () {\n        this.renderingUrls = [];\n        this.renderingUrlsCount = 0;\n        this.$downloadOptions.find(\"li.dynamic\").remove();\n    };\n    DownloadDialogue.prototype.getDownloadOptionsForRenderings = function (resource, defaultLabel, type) {\n        var renderings = resource.getRenderings();\n        var downloadOptions = [];\n        for (var i = 0; i < renderings.length; i++) {\n            var rendering = renderings[i];\n            if (rendering) {\n                var label = LanguageMap.getValue(rendering.getLabel(), this.extension.getLocale());\n                var currentId = \"downloadOption\" + ++this.renderingUrlsCount;\n                if (label) {\n                    label += \" ({0})\";\n                }\n                else {\n                    label = defaultLabel;\n                }\n                var mime = Files.simplifyMimeType(rendering.getFormat().toString());\n                label = Strings.format(label, mime);\n                this.renderingUrls[currentId] = rendering.id;\n                var $button = $('<li class=\"option dynamic\"><input id=\"' +\n                    currentId +\n                    '\" data-mime=\"' +\n                    mime +\n                    '\" title=\"' +\n                    label +\n                    '\" type=\"radio\" name=\"downloadOptions\" tabindex=\"0\" /><label for=\"' +\n                    currentId +\n                    '\">' +\n                    label +\n                    \"</label></li>\");\n                downloadOptions.push({\n                    type: type,\n                    button: $button\n                });\n            }\n        }\n        return downloadOptions;\n    };\n    DownloadDialogue.prototype.getSelectedOption = function () {\n        return this.$downloadOptions.find(\"li.option input:checked\");\n    };\n    DownloadDialogue.prototype.getCurrentResourceId = function () {\n        var canvas = this.extension.helper.getCurrentCanvas();\n        return canvas.externalResource.data.id;\n    };\n    DownloadDialogue.prototype.getCurrentResourceFormat = function () {\n        var id = this.getCurrentResourceId();\n        return id.substr(id.lastIndexOf(\".\") + 1).toLowerCase();\n    };\n    DownloadDialogue.prototype.updateNoneAvailable = function () {\n        if (!this.$downloadOptions.find(\"li:visible\").length) {\n            this.$noneAvailable.show();\n        }\n        else {\n            // select first option.\n            this.$noneAvailable.hide();\n        }\n    };\n    DownloadDialogue.prototype.updateTermsOfUseButton = function () {\n        var requiredStatement = this.extension.helper.getRequiredStatement();\n        if (Bools.getBool(this.extension.data.config.options.termsOfUseEnabled, false) &&\n            requiredStatement &&\n            requiredStatement.value) {\n            this.$termsOfUseButton.show();\n        }\n        else {\n            this.$termsOfUseButton.hide();\n        }\n    };\n    DownloadDialogue.prototype.getFileExtension = function (fileUri) {\n        var extension = fileUri.split(\".\").pop();\n        // if it's not a valid file extension\n        if (extension.length > 5 || extension.indexOf(\"/\") !== -1) {\n            return null;\n        }\n        return extension;\n    };\n    DownloadDialogue.prototype.isMediaDownloadEnabled = function () {\n        return this.extension.helper.isUIEnabled(\"mediaDownload\");\n    };\n    DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {\n        switch (option) {\n            case DownloadOption.ENTIRE_FILE_AS_ORIGINAL:\n                return this.isMediaDownloadEnabled();\n        }\n        return true;\n    };\n    DownloadDialogue.prototype.close = function () {\n        _super.prototype.close.call(this);\n    };\n    DownloadDialogue.prototype.resize = function () {\n        this.setDockedPosition();\n    };\n    return DownloadDialogue;\n}(Dialogue));\nexport { DownloadDialogue };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseEvents } from \"../uv-shared-module/BaseEvents\";\nimport { Dialogue } from \"../uv-shared-module/Dialogue\";\nimport { sanitize } from \"../../Utils\";\nimport { Bools } from \"@edsilv/utils\";\nimport { MetadataComponent, LimitType } from \"@iiif/iiif-metadata-component\";\nvar MoreInfoDialogue = /** @class */ (function (_super) {\n    __extends(MoreInfoDialogue, _super);\n    function MoreInfoDialogue($element) {\n        return _super.call(this, $element) || this;\n    }\n    MoreInfoDialogue.prototype.create = function () {\n        var _this = this;\n        this.setConfig(\"moreInfoDialogue\");\n        _super.prototype.create.call(this);\n        this.openCommand = BaseEvents.SHOW_MOREINFO_DIALOGUE;\n        this.closeCommand = BaseEvents.HIDE_MOREINFO_DIALOGUE;\n        this.component.subscribe(this.openCommand, function (triggerButton) {\n            _this.open(triggerButton);\n        });\n        this.component.subscribe(this.closeCommand, function () {\n            _this.close();\n        });\n        this.config.content = this.extension.data.config.modules.moreInfoRightPanel.content;\n        this.config.options = this.extension.data.config.modules.moreInfoRightPanel.options;\n        // create ui\n        this.$title = $(\"<h1>\" + this.config.content.title + \"</h1>\");\n        this.$content.append(this.$title);\n        this.$metadata = $('<div class=\"iiif-metadata-component\"></div>');\n        this.$content.append(this.$metadata);\n        this.metadataComponent = new MetadataComponent({\n            target: this.$metadata[0]\n        });\n        // hide\n        this.$element.hide();\n    };\n    MoreInfoDialogue.prototype.open = function (triggerButton) {\n        _super.prototype.open.call(this, triggerButton);\n        this.metadataComponent.set(this._getData());\n    };\n    MoreInfoDialogue.prototype._getData = function () {\n        return {\n            canvasDisplayOrder: this.config.options.canvasDisplayOrder,\n            canvases: this.extension.getCurrentCanvases(),\n            canvasExclude: this.config.options.canvasExclude,\n            canvasLabels: this.extension.getCanvasLabels(this.content.page),\n            content: this.config.content,\n            copiedMessageDuration: 2000,\n            copyToClipboardEnabled: Bools.getBool(this.config.options.copyToClipboardEnabled, false),\n            helper: this.extension.helper,\n            licenseFormatter: null,\n            limit: this.config.options.textLimit || 4,\n            limitType: LimitType.LINES,\n            manifestDisplayOrder: this.config.options.manifestDisplayOrder,\n            manifestExclude: this.config.options.manifestExclude,\n            range: this.extension.getCurrentCanvasRange(),\n            rtlLanguageCodes: this.config.options.rtlLanguageCodes,\n            sanitizer: function (html) {\n                return sanitize(html);\n            },\n            showAllLanguages: this.config.options.showAllLanguages\n        };\n    };\n    MoreInfoDialogue.prototype.close = function () {\n        _super.prototype.close.call(this);\n    };\n    MoreInfoDialogue.prototype.resize = function () {\n        this.setDockedPosition();\n    };\n    return MoreInfoDialogue;\n}(Dialogue));\nexport { MoreInfoDialogue };\n","var Bookmark = /** @class */ (function () {\n    function Bookmark() {\n    }\n    return Bookmark;\n}());\nexport { Bookmark };\n","export var DownloadOption;\n(function (DownloadOption) {\n    DownloadOption[\"CANVAS_RENDERINGS\"] = \"canvasRenderings\";\n    DownloadOption[\"CURRENT_VIEW\"] = \"currentView\";\n    DownloadOption[\"ENTIRE_DOCUMENT_AS_PDF\"] = \"entireDocumentAsPdf\";\n    DownloadOption[\"ENTIRE_DOCUMENT_AS_TEXT\"] = \"entireDocumentAsText\";\n    DownloadOption[\"ENTIRE_FILE_AS_ORIGINAL\"] = \"entireFileAsOriginal\";\n    DownloadOption[\"IMAGE_RENDERINGS\"] = \"imageRenderings\";\n    DownloadOption[\"MANIFEST_RENDERINGS\"] = \"manifestRenderings\";\n    DownloadOption[\"RANGE_RENDERINGS\"] = \"rangeRenderings\";\n    DownloadOption[\"SELECTION\"] = \"selection\";\n    //SEQUENCE_RENDERINGS = \"sequenceRenderings\",\n    DownloadOption[\"UNKNOWN\"] = \"unknown\";\n    DownloadOption[\"WHOLE_IMAGE_HIGH_RES\"] = \"wholeImageHighRes\";\n    DownloadOption[\"WHOLE_IMAGE_LOW_RES\"] = \"wholeImageLowRes\";\n    DownloadOption[\"WHOLE_IMAGES_HIGH_RES\"] = \"wholeImagesHighRes\";\n})(DownloadOption || (DownloadOption = {}));\n"],"sourceRoot":""}